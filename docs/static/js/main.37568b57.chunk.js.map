{"version":3,"sources":["Components/AddCategory.js","Utils/apiKey.js","Helpers/getGifs.js","Components/GrifGridItem.js","Components/GifGrid.js","Hooks/useFetchGifs.js","gifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","placeholder","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","fetch","url","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GrifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"wPAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAe9C,OACI,0BAAMC,SARW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAKd,2BACIO,KAAK,OACLC,YAAY,YACZC,MAAOV,EACPW,SAjBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,YAsB/Bb,EAAYgB,UAAY,CACpBf,c,OAAegB,EAAUC,KAAKC,Y,2BC/BnB,EACN,wCADM,EAEN,2CCAIC,EAAO,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,sEACAC,MAAM,GAAD,OAAIC,EAAJ,aAAgBH,EAAhB,qBAAqCG,IAD1C,cACbC,EADa,gBAEEA,EAAKC,OAFP,uBAEZC,EAFY,EAEZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAG,YAAK,CAC1BC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXR,IAAG,UAAEM,EAAIG,cAAN,aAAE,EAAYC,iBAAiBV,QAPnB,kBAUZI,GAVY,2CAAH,sDCAPO,EAAe,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOR,EAAS,EAATA,IAClC,OACI,yBAAKY,UAAU,0CACX,yBAAKC,IAAKb,EAAKc,IAAKN,IACpB,yBAAKI,UAAU,aACX,2BAAIJ,MCHPO,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACZnB,mBAAS,CAC/ByB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAVAC,qBAAU,WACNvB,EAAQC,GACPuB,MAAK,SAAAd,GACFY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAGlB,CAACnB,IAEGoB,EDbwBI,CAAaxB,GAAhCY,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QAEpB,OACI,oCACI,wBAAIJ,UAAU,qCAAqCf,GACnD,yBAAKe,UAAU,aACTI,GAAW,uBAAGJ,UAAU,oCAAb,iBAETH,EAAOJ,KAAK,SAACC,GAAD,OACR,kBAAC,EAAD,eACIgB,IAAKhB,EAAIC,IACJD,UEIlBiB,EAjBM,WAAO,IAAD,EACa7C,mBAAS,CAAC,cADvB,mBAChB8C,EADgB,KACJ/C,EADI,KAGvB,OACI,oCACI,8CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,6BACM+C,EAAWnB,KAAK,SAACR,GAAD,OACd,kBAAC,EAAD,CAASyB,IAAKzB,EAAUA,SAAUA,UCTtD4B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.37568b57.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories( cats => [inputValue, ...cats]);\r\n            setinputValue('');\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Search...\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.prototype = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export default {\r\n    url: 'https://api.giphy.com/v1/gifs/search?',\r\n    key: 'api_key=xs7oc1blpkK75EAS11685c5Klx0QuOT3'\r\n};","import url from '../Utils/apiKey';\r\n\r\nexport const getGifs = async(category) => {\r\n    const resp = await fetch(`${url.url}q=${category}&limit=12&${url.key}`);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => ({\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url\r\n    }));\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GrifGridItem = ({ title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <div className=\"container\">\r\n                <p>{title}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {useFetchGifs} from '../Hooks/useFetchGifs';\r\nimport { GrifGridItem } from './GrifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data:images ,loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            <div className=\"card-grid\">\r\n                { loading && <p className=\"animate__animated animate__flash\">...Loading...</p>}\r\n                {\r\n                    images.map( (img) => (\r\n                        <GrifGridItem\r\n                            key={img.id}\r\n                            {... img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from '../Helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n        .then(img =>{\r\n            setstate({\r\n                data: img,\r\n                loading: false\r\n            })\r\n        });\r\n    }, [category]);\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr/>\r\n            <div>\r\n                { categories.map( (category) => (\r\n                    <GifGrid key={category} category={category} />\r\n                ))\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './gifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}